TLANG_VER ?= 0.42
INSTALL_PATH ?= $(abspath ../tlangc)

CLANG ?= clang
CLANGXX ?= g++

C_COMPILER ?= cc
CXX_COMPILER ?= c++

define MODULEFILE
#%Module1.0#####################################################################

proc ModulesHelp { } {

        puts stderr " "
        puts stderr "This module loads the Tlang utility"
        puts stderr "\\nVersion $(TLANG_VER)\\n"

}
module-whatis "Name: Tlang"
module-whatis "Version: $(TLANG_VER)"
module-whatis "Category: utility, developer support"
module-whatis "Keywords: Compiler, Utility"
module-whatis "Description: Tlang is an open-source compiler infrastructure"

set     version             $(TLANG_VER)

prepend-path    PATH                $(INSTALL_PATH)/bin
prepend-path    CPATH               $(INSTALL_PATH)/include
prepend-path    LIBRARY_PATH        $(INSTALL_PATH)/lib
endef

.PHONY: build
build: tblgen lang module
	mkdir -pv build
	cd build && cmake -DCMAKE_C_COMPILER=$(C_COMPILER) -DCMAKE_CXX_COMPILER=$(CXX_COMPILER) -DCMAKE_INSTALL_PREFIX:PATH=$(INSTALL_PATH) ../
	cd build && $(MAKE) -j16
	cd build && $(MAKE) install

.PHONY: runtime
runtime:
	mkdir -pv build-runtime
	cd build-runtime && cmake -DCMAKE_C_COMPILER=$(CLANG) -DCMAKE_CXX_COMPILER=$(CLANGXX) -DCMAKE_INSTALL_PREFIX:PATH=$(INSTALL_PATH) ../runtime
	cd build-runtime && $(MAKE) -j16
	cd build-runtime && $(MAKE) install

.PHONY: module
module: tlang-$(TLANG_VER)

export MODULEFILE
tlang-$(TLANG_VER):
	mkdir -pv $(INSTALL_PATH)/modulefiles
	echo "$$MODULEFILE" > $(INSTALL_PATH)/modulefiles/tlang-$(TLANG_VER)


.PHONY: tblgen
tblgen: tblgen/build

tblgen/build:
	$(MAKE) -C tblgen build C_COMPILER=$(CLANG) CXX_COMPILER=$(CLANGXX)

.PHONY: lang
lang: lexer ast parser

.PHONY: lexer
lexer:
	python3 lang/langGen.py lexer -c lang/Conf -t lang/Templates -o include/Lex

.PHONY: ast
ast:
	$(MAKE) -f tblgen.make

.PHONY: parser
parser:
	python3 lang/langGen.py parser -c lang/Conf -t lang/Templates -o lib/Parser

.PHONY: purge
purge:
	rm -rf ./build ./build-runtime
