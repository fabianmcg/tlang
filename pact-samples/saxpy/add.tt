extern fn __tlang_device_map(K: i32, A: address, S: i64) -> address;
extern fn __tlang_device_sync(ID: i32);

fn add_tlang(alpha: f64, x: f64*, y: f64*, n: i32) {
  let x_dev: f64* = __tlang_device_map(1, x, 8 * n),
      y_dev: f64* = __tlang_device_map(1, y, 8 * n);
  let gsz: i32 = (n + 127) / 128;
  context<device>
  parallel<(gsz, 1, 1), (128, 1, 1)> 
  [firstprivate(alpha, x_dev, y_dev, n)] {
    let i: i32 = tid<m:s>.x + dim<m>.x * tid<m>.x;
    if (i < n)
      x_dev[i] = alpha * x_dev[i] + y_dev[i];
    reduce(x_dev[i]);
  }
  __tlang_device_map(2, x, 8 * n);
}

